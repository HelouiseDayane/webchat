{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/webchat/front/src/components/Mensagens.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mensagens = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [mensagens, setMensagens] = useState([]);\n  const [novaMensagem, setNovaMensagem] = useState('');\n  const [conversaFinalizada, setConversaFinalizada] = useState(false);\n  const [resetChat, setResetChat] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/mensagems/${id}`).then(response => {\n      setMensagens(response.data.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [id]);\n  useEffect(() => {\n    if (resetChat) {\n      setMensagens([]);\n      setNovaMensagem('');\n      setConversaFinalizada(false);\n      setResetChat(false);\n    }\n  }, [resetChat]);\n  const handleEnviarMensagem = () => {\n    if (novaMensagem.trim() !== '') {\n      const mensagemEnviada = {\n        id: Date.now(),\n        conteudo: novaMensagem,\n        enviada: true,\n        id_conversa: id // Add the id_conversa to the message object\n      };\n\n      setMensagens([...mensagens, mensagemEnviada]);\n      setNovaMensagem('');\n      axios.post('http://localhost:8000/api/mensagems', {\n        conteudo: novaMensagem,\n        id_conversa: id // Send the id_conversa in the request payload\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n  const handleFinalizarConversa = () => {\n    setMensagens([]);\n    setConversaFinalizada(true);\n  };\n  const handleNovaConversa = () => {\n    setResetChat(true);\n    history.push('/nova-conversa');\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleEnviarMensagem();\n    }\n  };\n  if (conversaFinalizada) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Conversa finalizada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNovaConversa,\n        children: \"Iniciar nova conversa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mensagens-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mensagens\",\n      children: mensagens.map(mensagem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mensagem ${mensagem.enviada ? 'enviada' : 'recebida'}`,\n        children: mensagem.conteudo\n      }, mensagem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"envio-mensagem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: novaMensagem,\n        onChange: event => setNovaMensagem(event.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Digite sua mensagem...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnviarMensagem,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinalizarConversa,\n        children: \"Finalizar Conversa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Mensagens, \"X/eQZun2M42iuJ1iFtSEvtPMAb8=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = Mensagens;\nexport default Mensagens;\nvar _c;\n$RefreshReg$(_c, \"Mensagens\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useHistory","useParams","jsxDEV","_jsxDEV","Mensagens","_s","id","mensagens","setMensagens","novaMensagem","setNovaMensagem","conversaFinalizada","setConversaFinalizada","resetChat","setResetChat","history","get","then","response","data","catch","error","console","handleEnviarMensagem","trim","mensagemEnviada","Date","now","conteudo","enviada","id_conversa","post","handleFinalizarConversa","handleNovaConversa","push","handleKeyDown","event","key","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","mensagem","type","value","onChange","target","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/webchat/front/src/components/Mensagens.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useHistory, useParams } from 'react-router-dom';\n\nconst Mensagens = () => {\n  const { id } = useParams();\n  const [mensagens, setMensagens] = useState([]);\n  const [novaMensagem, setNovaMensagem] = useState('');\n  const [conversaFinalizada, setConversaFinalizada] = useState(false);\n  const [resetChat, setResetChat] = useState(false);\n  const history = useHistory();\n  \n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/mensagems/${id}`)\n      .then(response => {\n        setMensagens(response.data.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [id]);\n\n  useEffect(() => {\n    if (resetChat) {\n      setMensagens([]);\n      setNovaMensagem('');\n      setConversaFinalizada(false);\n      setResetChat(false);\n    }\n  }, [resetChat]);\n\n  const handleEnviarMensagem = () => {\n    if (novaMensagem.trim() !== '') {\n      const mensagemEnviada = {\n        id: Date.now(),\n        conteudo: novaMensagem,\n        enviada: true,\n        id_conversa: id, // Add the id_conversa to the message object\n      };\n  \n      setMensagens([...mensagens, mensagemEnviada]);\n      setNovaMensagem('');\n  \n      axios\n        .post('http://localhost:8000/api/mensagems', {\n          conteudo: novaMensagem,\n          id_conversa: id, // Send the id_conversa in the request payload\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  const handleFinalizarConversa = () => {\n    setMensagens([]);\n    setConversaFinalizada(true);\n  };\n\n  const handleNovaConversa = () => {\n    setResetChat(true);\n    history.push('/nova-conversa');\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleEnviarMensagem();\n    }\n  };\n\n  if (conversaFinalizada) {\n    return (\n      <div>\n        <p>Conversa finalizada.</p>\n        <button onClick={handleNovaConversa}>Iniciar nova conversa</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mensagens-container\">\n      <div className=\"mensagens\">\n        {mensagens.map(mensagem => (\n          <div\n            key={mensagem.id}\n            className={`mensagem ${mensagem.enviada ? 'enviada' : 'recebida'}`}\n          >\n            {mensagem.conteudo}\n          </div>\n        ))}\n      </div>\n      <div className=\"envio-mensagem\">\n        <input\n          type=\"text\"\n          value={novaMensagem}\n          onChange={event => setNovaMensagem(event.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Digite sua mensagem...\"\n        />\n        <button onClick={handleEnviarMensagem}>Enviar</button>\n        <button onClick={handleFinalizarConversa}>Finalizar Conversa</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Mensagens;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}