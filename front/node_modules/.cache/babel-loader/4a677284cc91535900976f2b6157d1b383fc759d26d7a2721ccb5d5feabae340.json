{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/webchat/front/src/components/Mensagens.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mensagens = () => {\n  _s();\n  const {\n    id_conversa\n  } = useParams();\n  const [mensagens, setMensagens] = useState([]);\n  const [novaMensagem, setNovaMensagem] = useState('');\n  const [conversaFinalizada, setConversaFinalizada] = useState(false);\n  useEffect(() => {\n    const fetchMensagens = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/mensagens/${id_conversa}`);\n        setMensagens(response.data.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const interval = setInterval(() => {\n      fetchMensagens();\n    }, 5000); // Intervalo de 5 segundos (ajuste conforme necessário)\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [id_conversa]);\n  const handleEnviarMensagem = () => {\n    if (novaMensagem.trim() !== '') {\n      const mensagemEnviada = {\n        conteudo: novaMensagem,\n        id_conversa: id_conversa,\n        enviada: true // Indica que a mensagem foi enviada pelo usuário\n      };\n\n      setMensagens([...mensagens, mensagemEnviada]);\n      setNovaMensagem('');\n      axios.post('http://localhost:8000/api/mensagens', mensagemEnviada).then(response => {\n        console.log(response.data); // Exibe a resposta da API (opcional)\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n  const handleFinalizarConversa = () => {\n    setMensagens([]);\n    setConversaFinalizada(true);\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleEnviarMensagem();\n    }\n  };\n  if (conversaFinalizada) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Conversa finalizada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/nova-conversa\",\n        children: \"Iniciar nova conversa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mensagens\",\n      children: mensagens.map(mensagem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mensagem ${mensagem.enviada ? 'enviada' : 'recebida'}`,\n        children: [mensagem.enviada ? 'Usuário: ' : ' ', mensagem.conteudo]\n      }, mensagem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"envio-mensagem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: novaMensagem,\n        onChange: event => setNovaMensagem(event.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Digite sua mensagem...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnviarMensagem,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinalizarConversa,\n        children: \"Finalizar Conversa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Mensagens, \"kcmkAlPcyMa1hjJrjZypnNgNxYY=\", false, function () {\n  return [useParams];\n});\n_c = Mensagens;\nexport default Mensagens;\nvar _c;\n$RefreshReg$(_c, \"Mensagens\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useParams","jsxDEV","_jsxDEV","Mensagens","_s","id_conversa","mensagens","setMensagens","novaMensagem","setNovaMensagem","conversaFinalizada","setConversaFinalizada","fetchMensagens","response","get","data","error","console","interval","setInterval","clearInterval","handleEnviarMensagem","trim","mensagemEnviada","conteudo","enviada","post","then","log","catch","handleFinalizarConversa","handleKeyDown","event","key","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","map","mensagem","id","type","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/webchat/front/src/components/Mensagens.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\n\nconst Mensagens = () => {\n  const { id_conversa } = useParams();\n  const [mensagens, setMensagens] = useState([]);\n  const [novaMensagem, setNovaMensagem] = useState('');\n  const [conversaFinalizada, setConversaFinalizada] = useState(false);\n\n  useEffect(() => {\n    const fetchMensagens = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/mensagens/${id_conversa}`);\n        setMensagens(response.data.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const interval = setInterval(() => {\n      fetchMensagens();\n    }, 5000); // Intervalo de 5 segundos (ajuste conforme necessário)\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [id_conversa]);\n\n  const handleEnviarMensagem = () => {\n    if (novaMensagem.trim() !== '') {\n      const mensagemEnviada = {\n        conteudo: novaMensagem,\n        id_conversa: id_conversa,\n        enviada: true, // Indica que a mensagem foi enviada pelo usuário\n      };\n\n      setMensagens([...mensagens, mensagemEnviada]);\n      setNovaMensagem('');\n\n      axios\n        .post('http://localhost:8000/api/mensagens', mensagemEnviada)\n        .then(response => {\n          console.log(response.data); // Exibe a resposta da API (opcional)\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n  \n\n  const handleFinalizarConversa = () => {\n    setMensagens([]);\n    setConversaFinalizada(true);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleEnviarMensagem();\n    }\n  };\n\n  if (conversaFinalizada) {\n    return (\n      <div>\n        <p>Conversa finalizada.</p>\n        <Link to=\"/nova-conversa\">Iniciar nova conversa</Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"mensagens\">\n      {mensagens.map(mensagem => (\n        <div\n          key={mensagem.id}\n          className={`mensagem ${mensagem.enviada ? 'enviada' : 'recebida'}`}\n        >\n          {mensagem.enviada ? 'Usuário: ' : ' '}\n          {mensagem.conteudo}\n        </div>\n      ))}\n      </div>\n      <div className=\"envio-mensagem\">\n        <input\n          type=\"text\"\n          value={novaMensagem}\n          onChange={event => setNovaMensagem(event.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Digite sua mensagem...\"\n        />\n        <button onClick={handleEnviarMensagem}>Enviar</button>\n        <button onClick={handleFinalizarConversa}>Finalizar Conversa</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Mensagens;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}