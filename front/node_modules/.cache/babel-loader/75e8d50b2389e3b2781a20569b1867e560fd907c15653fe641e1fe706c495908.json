{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/webchat/front/src/components/Mensagens.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mensagens = () => {\n  _s();\n  const [mensagens, setMensagens] = useState([]);\n  const [novaMensagem, setNovaMensagem] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/mensagens').then(response => {\n      setMensagens(response.data.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleEnviarMensagem = () => {\n    if (novaMensagem.trim() !== '') {\n      const mensagemEnviada = {\n        id: Date.now(),\n        // Gerando um ID único para a mensagem enviada\n        conteudo: novaMensagem,\n        enviada: true\n      };\n      setMensagens([...mensagens, mensagemEnviada]);\n      setNovaMensagem('');\n      axios.post('http://localhost:8000/api/mensagens', {\n        conteudo: novaMensagem\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n  const handleFinalizarChat = () => {\n    setMensagens([]);\n    setNovaMensagem('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mensagens-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mensagens\",\n      children: mensagens.map(mensagem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mensagem ${mensagem.enviada ? 'enviada' : 'recebida'}`,\n        children: mensagem.conteudo\n      }, mensagem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"envio-mensagem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: novaMensagem,\n        onChange: event => setNovaMensagem(event.target.value),\n        placeholder: \"Digite sua mensagem...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEnviarMensagem,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinalizarChat,\n        children: \"Finalizar Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Mensagens, \"ZuVKjC3LsBgtzVDKNKSM3GY+mDY=\");\n_c = Mensagens;\nexport default Mensagens;\nvar _c;\n$RefreshReg$(_c, \"Mensagens\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Mensagens","_s","mensagens","setMensagens","novaMensagem","setNovaMensagem","get","then","response","data","catch","error","console","handleEnviarMensagem","trim","mensagemEnviada","id","Date","now","conteudo","enviada","post","handleFinalizarChat","className","children","map","mensagem","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/webchat/front/src/components/Mensagens.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Mensagens = () => {\n  const [mensagens, setMensagens] = useState([]);\n  const [novaMensagem, setNovaMensagem] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/mensagens')\n      .then(response => {\n        setMensagens(response.data.data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  const handleEnviarMensagem = () => {\n    if (novaMensagem.trim() !== '') {\n      const mensagemEnviada = {\n        id: Date.now(), // Gerando um ID único para a mensagem enviada\n        conteudo: novaMensagem,\n        enviada: true,\n      };\n\n      setMensagens([...mensagens, mensagemEnviada]);\n      setNovaMensagem('');\n\n      axios.post('http://localhost:8000/api/mensagens', { conteudo: novaMensagem })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  };\n\n  const handleFinalizarChat = () => {\n  \n    setMensagens([]);\n    setNovaMensagem('');\n  };\n\n  return (\n    <div className=\"mensagens-container\">\n      <div className=\"mensagens\">\n        {mensagens.map(mensagem => (\n          <div\n            key={mensagem.id}\n            className={`mensagem ${mensagem.enviada ? 'enviada' : 'recebida'}`}\n          >\n            {mensagem.conteudo}\n          </div>\n        ))}\n      </div>\n      <div className=\"envio-mensagem\">\n        <input\n          type=\"text\"\n          value={novaMensagem}\n          onChange={event => setNovaMensagem(event.target.value)}\n          placeholder=\"Digite sua mensagem...\"\n        />\n        <button onClick={handleEnviarMensagem}>Enviar</button>\n        <button onClick={handleFinalizarChat}>Finalizar Chat</button> {/* Botão para finalizar o chat */}\n      </div>\n    </div>\n  );\n};\n\nexport default Mensagens;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACS,GAAG,CAAC,qCAAqC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAI;MAChBL,YAAY,CAACK,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIT,YAAY,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9B,MAAMC,eAAe,GAAG;QACtBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE;QAChBC,QAAQ,EAAEf,YAAY;QACtBgB,OAAO,EAAE;MACX,CAAC;MAEDjB,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEa,eAAe,CAAC,CAAC;MAC7CV,eAAe,CAAC,EAAE,CAAC;MAEnBR,KAAK,CAACwB,IAAI,CAAC,qCAAqC,EAAE;QAAEF,QAAQ,EAAEf;MAAa,CAAC,CAAC,CAC1EM,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAEhCnB,YAAY,CAAC,EAAE,CAAC;IAChBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA;IAAKwB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCzB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBtB,SAAS,CAACuB,GAAG,CAACC,QAAQ,iBACrB3B,OAAA;QAEEwB,SAAS,EAAG,YAAWG,QAAQ,CAACN,OAAO,GAAG,SAAS,GAAG,UAAW,EAAE;QAAAI,QAAA,EAElEE,QAAQ,CAACP;MAAQ,GAHbO,QAAQ,CAACV,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BzB,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE5B,YAAa;QACpB6B,QAAQ,EAAEC,KAAK,IAAI7B,eAAe,CAAC6B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;QACvDI,WAAW,EAAC;MAAwB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACF/B,OAAA;QAAQsC,OAAO,EAAExB,oBAAqB;QAAAW,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtD/B,OAAA;QAAQsC,OAAO,EAAEf,mBAAoB;QAAAE,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA9DID,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAgEf,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}